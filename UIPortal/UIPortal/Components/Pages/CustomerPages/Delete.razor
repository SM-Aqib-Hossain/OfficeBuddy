@attribute [StreamRendering]
@page "/customers/delete"
@using Microsoft.EntityFrameworkCore
@using UIPortal.Components.Models

@attribute [Authorize(Roles = "Admin")]
@inject NavigationManager NavigationManager
@inject HttpClient _httpClient

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Customer</h2>
    <hr />
    @if (customer is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@customer.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">City</dt>
            <dd class="col-sm-10">@customer.City</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Password</dt>
            <dd class="col-sm-10">@customer.Password</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Role</dt>
            <dd class="col-sm-10">@customer.Role</dd>
        </dl>
        <EditForm method="post" Model="customer" OnValidSubmit="DeleteCustomer" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(customer is null)">Delete</button> |
            <a href="/view-all">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private CustomerDto? customer;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        
        customer = await _httpClient.GetFromJsonAsync<CustomerDto>($"Customers/{Id}");

        if (customer is null)
        {
            NavigationManager.NavigateTo("notfound");
        }

        // try
        // {
        //     Use the API link to fetch customer details by ID
        //     customer = await _httpClient.GetFromJsonAsync<Customer>($"https:localhost:7011/api/Customers/{Id}");

        //     if (customer is null)
        //     {
        //         NavigationManager.NavigateTo("notfound");
        //     }
        // }
        // catch (Exception ex)
        // {
        //     Console.WriteLine($"Error fetching customer: {ex.Message}");
        //     NavigationManager.NavigateTo("notfound");
        // }

    }

    private async Task DeleteCustomer()
    {

        var response = await _httpClient.DeleteAsync($"Customers/{Id}");

        if (response.IsSuccessStatusCode)
        {
                
            NavigationManager.NavigateTo("/view-all");
        }
        else
        {
           Console.WriteLine("Error deleting the customer.");
        }
        // try
        // {
        //     Call the API to delete the customer by ID
        //     var response = await _httpClient.DeleteAsync($"https:localhost:7011/api/Customers/{Id}");

        //     if (response.IsSuccessStatusCode)
        //     {
        //         Navigate back to the customer list after deletion
        //         NavigationManager.NavigateTo("/customers");
        //     }
        //     else
        //     {
        //         Console.WriteLine("Error deleting the customer.");
        //     }
        // }
        // catch (Exception ex)
        // {
        //     Console.WriteLine($"Error deleting customer: {ex.Message}");
        // }
    }
}
