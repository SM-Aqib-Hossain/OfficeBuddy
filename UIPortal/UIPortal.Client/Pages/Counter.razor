@page "/counter"
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims;
@rendermode InteractiveAuto
@attribute [Authorize(Roles = "User")]
@inject HttpClient _httpClient

<PageTitle>Counter</PageTitle>

<h1>Counter.</h1>
<h2> Hi, @userName, Access level-@role</h2>

<h3>Balance = @balance</h3>
<h4>Balance = @tempBalance</h4>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private int currentCount = 0;

    private static string userName;
    private static string role;
    private static int identityNum;
    private static int? balance;
    private static int? tempBalance;


    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            userName = user.Identity.Name; // This gets the user's name
            var roleClaim = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role);
            role = roleClaim != null ? roleClaim.Value : "No role assigned";

            var idClaim = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier);
            if (idClaim != null && int.TryParse(idClaim.Value, out int id))
            {
                identityNum = id;
            }
        }
        else
        {
            userName = "Anonymous";
            role = "No role assigned";
        }

        balance = await _httpClient.GetFromJsonAsync<int?>($"https://localhost:7011/api/Customers/balance/{identityNum}");
        tempBalance = balance;
    }
    private void IncrementCount()
    {
        currentCount++;
        tempBalance--;
    }
}
